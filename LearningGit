What is Git?
Git is a Distributed Version Control tool that supports distributed non-linear workflows by providing data assurance for delivering quality
software

Features of Git
  --Distributed
  --Non-Linear
  --Compatible
    --compatible with SVN,SVK using Git-SVN
  --Branching
  --Light weight
    --Uses lossless compression technique to compress on client's side
  --Speed
  --Open Source
  --Reliable
    --In the event of crash data can be recovered from local repository
  --Secure
    --Uses SHA1 to name and identify objects
  --Economical
  
Local Repository
  --Located on local machine
  --Resides as a .git folder inside project root
  --only the admin of the system can work on this repo
 
Central Repository
  --Located on a remote server
  --Exclusively consists of .git repo folder
  --Meant for teams to share and exchange data

======================================================================
Git commands
--git init //to create repositories

//Making changes
--status
--add
  --use "-A" to commit all files
--commit

//Parallel development
--branch
--merge
--rebase

//Syncing
--add origin
--push
--pull
=====================================================================
--Install git in your system and use "git init" to create local repo
--git clone is used to clone central repo to your local
--use "git add origin <link>" to add to remote repo
--pull files with "git pull"
--Push changes with "git push"

--"git status" is used to know which files are added to index and are ready to commit
--"git add" lets us add files to index
--"git commit"
	--refers to recording snapshots of the repo at a given time
	--commited snapshots will never be changed unless done explicitly
  --using "-m" option is to include a commit message
  --use "-a" to commit all files

--whenever merging make sure you are checked into the destination branch
Parallel Development -Branching
	--Branches are pointers to a specific commit
	--Branches are two types
	   --Local 
	   --Remote-tracking branches

--Git pull gets all the changes to the master branch
--Git fetch gets the changes to a non master branch
--Git pull is equal to Git fetch + Git Merge

Rebasing:
	--Another kind of merging
	--Combiens work between different branches
	--can be used to make linear sequence of commits
	
	
	
